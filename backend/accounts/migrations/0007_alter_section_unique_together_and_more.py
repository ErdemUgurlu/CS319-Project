# Generated by Django 5.2 on 2025-05-06 20:18

from django.db import migrations

def handle_duplicate_sections(apps, schema_editor):
    """
    Handle duplicate sections before removing semester and year fields.
    This function keeps the most recent section for each (course, section_number) combination,
    and deletes the rest.
    """
    Section = apps.get_model('accounts', 'Section')
    
    # Group sections by course and section_number
    section_groups = {}
    for section in Section.objects.all():
        key = (section.course_id, section.section_number)
        if key not in section_groups:
            section_groups[key] = []
        section_groups[key].append(section)
    
    # For each group, keep only one section (the most recent by ID)
    for key, sections in section_groups.items():
        if len(sections) > 1:
            # Sort sections by ID (highest ID = most recent)
            sections.sort(key=lambda s: s.id, reverse=True)
            # Keep the first section, delete the rest
            for section in sections[1:]:
                section.delete()

class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0006_section_student_count'),
    ]

    operations = [
        # First run a function to handle duplicates
        migrations.RunPython(handle_duplicate_sections),
        # Then change the unique_together constraint
        migrations.AlterUniqueTogether(
            name='section',
            unique_together={('course', 'section_number')},
        ),
        # Finally remove the fields
        migrations.RemoveField(
            model_name='section',
            name='semester',
        ),
        migrations.RemoveField(
            model_name='section',
            name='year',
        ),
    ]
